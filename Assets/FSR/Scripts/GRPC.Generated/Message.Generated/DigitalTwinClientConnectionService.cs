// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Services/DigitalTwinClientConnectionService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService {

  /// <summary>Holder for reflection information generated from Protos/Services/DigitalTwinClientConnectionService.proto</summary>
  public static partial class DigitalTwinClientConnectionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/Services/DigitalTwinClientConnectionService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DigitalTwinClientConnectionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjhQcm90b3MvU2VydmljZXMvRGlnaXRhbFR3aW5DbGllbnRDb25uZWN0aW9u",
            "U2VydmljZS5wcm90bxIYRlNSLkRpZ2l0YWxUd2luLkFwcC5HUlBDGh1Qcm90",
            "b3MvRFRPL0Fhc01vZGVscy5WMy5wcm90bxogUHJvdG9zL0RUTy9BYXNBcGlN",
            "b2RlbHMuVjMucHJvdG8iQAobQ29ubmVjdGVkQ2xpZW50Tm90aWZpY2F0aW9u",
            "EhAKCGNsaWVudElkGAEgASgJEg8KB3N1Y2Nlc3MYAiABKAgiPgoZQWJvcnRl",
            "ZENsaWVudE5vdGlmaWNhdGlvbhIQCghjbGllbnRJZBgBIAEoCRIPCgdzdWNj",
            "ZXNzGAIgASgIIqoCCiFJbnZva2VPcGVyYXRpb25DbGllbnROb3RpZmljYXRp",
            "b24SEQoJcmVxdWVzdElkGAEgASgJEhIKCnN1Ym1vZGVsSWQYAiABKAkSGAoQ",
            "b3BlcmF0aW9uSWRTaG9ydBgDIAEoCRJGCg5pbnB1dFZhcmlhYmxlcxgEIAMo",
            "CzIuLkZTUi5EaWdpdGFsVHdpbi5BcHAuR1JQQy5PcGVyYXRpb25WYXJpYWJs",
            "ZURUTxJGCg5pbm91dFZhcmlhYmxlcxgFIAMoCzIuLkZTUi5EaWdpdGFsVHdp",
            "bi5BcHAuR1JQQy5PcGVyYXRpb25WYXJpYWJsZURUTxIRCgl0aW1lc3RhbXAY",
            "BiABKAMSDwoHaXNBc3luYxgHIAEoCBIQCghoYW5kbGVJZBgIIAEoCSK6AgoS",
            "Q2xpZW50Tm90aWZpY2F0aW9uEj4KBHR5cGUYASABKA4yMC5GU1IuRGlnaXRh",
            "bFR3aW4uQXBwLkdSUEMuQ2xpZW50Tm90aWZpY2F0aW9uVHlwZRJICgljb25u",
            "ZWN0ZWQYAiABKAsyNS5GU1IuRGlnaXRhbFR3aW4uQXBwLkdSUEMuQ29ubmVj",
            "dGVkQ2xpZW50Tm90aWZpY2F0aW9uEkQKB2Fib3J0ZWQYAyABKAsyMy5GU1Iu",
            "RGlnaXRhbFR3aW4uQXBwLkdSUEMuQWJvcnRlZENsaWVudE5vdGlmaWNhdGlv",
            "bhJUCg9pbnZva2VPcGVyYXRpb24YBCABKAsyOy5GU1IuRGlnaXRhbFR3aW4u",
            "QXBwLkdSUEMuSW52b2tlT3BlcmF0aW9uQ2xpZW50Tm90aWZpY2F0aW9uIi0K",
            "GUNvbm5lY3RTZXJ2ZXJOb3RpZmljYXRpb24SEAoIY2xpZW50SWQYASABKAki",
            "KwoXQWJvcnRTZXJ2ZXJOb3RpZmljYXRpb24SEAoIY2xpZW50SWQYASABKAki",
            "dgogT3BlcmF0aW9uU3RhdGVTZXJ2ZXJOb3RpZmljYXRpb24SEAoIaGFuZGxl",
            "SWQYASABKAkSQAoOZXhlY3V0aW9uU3RhdGUYAiABKA4yKC5GU1IuRGlnaXRh",
            "bFR3aW4uQXBwLkdSUEMuRXhlY3V0aW9uU3RhdGUicAohT3BlcmF0aW9uUmVz",
            "dWx0U2VydmVyTm90aWZpY2F0aW9uEhAKCGNsaWVudElkGAEgASgJEjkKBnJl",
            "c3VsdBgCIAEoCzIpLkZTUi5EaWdpdGFsVHdpbi5BcHAuR1JQQy5PcGVyYXRp",
            "b25SZXN1bHQihgMKElNlcnZlck5vdGlmaWNhdGlvbhI+CgR0eXBlGAEgASgO",
            "MjAuRlNSLkRpZ2l0YWxUd2luLkFwcC5HUlBDLlNlcnZlck5vdGlmaWNhdGlv",
            "blR5cGUSRAoHY29ubmVjdBgCIAEoCzIzLkZTUi5EaWdpdGFsVHdpbi5BcHAu",
            "R1JQQy5Db25uZWN0U2VydmVyTm90aWZpY2F0aW9uEkAKBWFib3J0GAMgASgL",
            "MjEuRlNSLkRpZ2l0YWxUd2luLkFwcC5HUlBDLkFib3J0U2VydmVyTm90aWZp",
            "Y2F0aW9uElIKDm9wZXJhdGlvblN0YXRlGAUgASgLMjouRlNSLkRpZ2l0YWxU",
            "d2luLkFwcC5HUlBDLk9wZXJhdGlvblN0YXRlU2VydmVyTm90aWZpY2F0aW9u",
            "ElQKD29wZXJhdGlvblJlc3VsdBgGIAEoCzI7LkZTUi5EaWdpdGFsVHdpbi5B",
            "cHAuR1JQQy5PcGVyYXRpb25SZXN1bHRTZXJ2ZXJOb3RpZmljYXRpb24iGwoL",
            "VGVzdE1lc3NhZ2USDAoEaW5mbxgBIAEoCSqVAQoWQ2xpZW50Tm90aWZpY2F0",
            "aW9uVHlwZRImCiJDTElFTlRfTk9USUZJQ0FUSU9OX1RZUEVfQ09OTkVDVEVE",
            "EAASJAogQ0xJRU5UX05PVElGSUNBVElPTl9UWVBFX0FCT1JURUQQARItCilD",
            "TElFTlRfTk9USUZJQ0FUSU9OX1RZUEVfSU5WT0tFX09QRVJBVElPThACKr8B",
            "ChZTZXJ2ZXJOb3RpZmljYXRpb25UeXBlEiQKIFNFUlZFUl9OT1RJRklDQVRJ",
            "T05fVFlQRV9DT05ORUNUEAASIgoeU0VSVkVSX05PVElGSUNBVElPTl9UWVBF",
            "X0FCT1JUEAESLAooU0VSVkVSX05PVElGSUNBVElPTl9UWVBFX09QRVJBVElP",
            "Tl9TVEFURRACEi0KKVNFUlZFUl9OT1RJRklDQVRJT05fVFlQRV9PUEVSQVRJ",
            "T05fUkVTVUxUEAMy7wEKIkRpZ2l0YWxUd2luQ2xpZW50Q29ubmVjdGlvblNl",
            "cnZpY2USaQoHQ29ubmVjdBIsLkZTUi5EaWdpdGFsVHdpbi5BcHAuR1JQQy5T",
            "ZXJ2ZXJOb3RpZmljYXRpb24aLC5GU1IuRGlnaXRhbFR3aW4uQXBwLkdSUEMu",
            "Q2xpZW50Tm90aWZpY2F0aW9uKAEwARJeCg5HZXRUZXN0TWVzc2FnZRIlLkZT",
            "Ui5EaWdpdGFsVHdpbi5BcHAuR1JQQy5UZXN0TWVzc2FnZRolLkZTUi5EaWdp",
            "dGFsVHdpbi5BcHAuR1JQQy5UZXN0TWVzc2FnZUJHqgJERlNSLkRpZ2l0YWxU",
            "d2luLkFwcC5HUlBDLlNlcnZpY2VzLkRpZ2l0YWxUd2luQ2xpZW50Q29ubmVj",
            "dGlvblNlcnZpY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.AasModelsV3Reflection.Descriptor, global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.AasApiModelsV3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ClientNotificationType), typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ServerNotificationType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectedClientNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectedClientNotification.Parser, new[]{ "ClientId", "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortedClientNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortedClientNotification.Parser, new[]{ "ClientId", "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.InvokeOperationClientNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.InvokeOperationClientNotification.Parser, new[]{ "RequestId", "SubmodelId", "OperationIdShort", "InputVariables", "InoutVariables", "Timestamp", "IsAsync", "HandleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ClientNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ClientNotification.Parser, new[]{ "Type", "Connected", "Aborted", "InvokeOperation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectServerNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectServerNotification.Parser, new[]{ "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortServerNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortServerNotification.Parser, new[]{ "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationStateServerNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationStateServerNotification.Parser, new[]{ "HandleId", "ExecutionState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationResultServerNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationResultServerNotification.Parser, new[]{ "ClientId", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ServerNotification), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ServerNotification.Parser, new[]{ "Type", "Connect", "Abort", "OperationState", "OperationResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.TestMessage), global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.TestMessage.Parser, new[]{ "Info" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ClientNotificationType {
    [pbr::OriginalName("CLIENT_NOTIFICATION_TYPE_CONNECTED")] Connected = 0,
    [pbr::OriginalName("CLIENT_NOTIFICATION_TYPE_ABORTED")] Aborted = 1,
    [pbr::OriginalName("CLIENT_NOTIFICATION_TYPE_INVOKE_OPERATION")] InvokeOperation = 2,
  }

  public enum ServerNotificationType {
    [pbr::OriginalName("SERVER_NOTIFICATION_TYPE_CONNECT")] Connect = 0,
    [pbr::OriginalName("SERVER_NOTIFICATION_TYPE_ABORT")] Abort = 1,
    [pbr::OriginalName("SERVER_NOTIFICATION_TYPE_OPERATION_STATE")] OperationState = 2,
    [pbr::OriginalName("SERVER_NOTIFICATION_TYPE_OPERATION_RESULT")] OperationResult = 3,
  }

  #endregion

  #region Messages
  public sealed partial class ConnectedClientNotification : pb::IMessage<ConnectedClientNotification> {
    private static readonly pb::MessageParser<ConnectedClientNotification> _parser = new pb::MessageParser<ConnectedClientNotification>(() => new ConnectedClientNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectedClientNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectedClientNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectedClientNotification(ConnectedClientNotification other) : this() {
      clientId_ = other.clientId_;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectedClientNotification Clone() {
      return new ConnectedClientNotification(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectedClientNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectedClientNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectedClientNotification other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AbortedClientNotification : pb::IMessage<AbortedClientNotification> {
    private static readonly pb::MessageParser<AbortedClientNotification> _parser = new pb::MessageParser<AbortedClientNotification>(() => new AbortedClientNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbortedClientNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortedClientNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortedClientNotification(AbortedClientNotification other) : this() {
      clientId_ = other.clientId_;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortedClientNotification Clone() {
      return new AbortedClientNotification(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbortedClientNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbortedClientNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbortedClientNotification other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvokeOperationClientNotification : pb::IMessage<InvokeOperationClientNotification> {
    private static readonly pb::MessageParser<InvokeOperationClientNotification> _parser = new pb::MessageParser<InvokeOperationClientNotification>(() => new InvokeOperationClientNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvokeOperationClientNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvokeOperationClientNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvokeOperationClientNotification(InvokeOperationClientNotification other) : this() {
      requestId_ = other.requestId_;
      submodelId_ = other.submodelId_;
      operationIdShort_ = other.operationIdShort_;
      inputVariables_ = other.inputVariables_.Clone();
      inoutVariables_ = other.inoutVariables_.Clone();
      timestamp_ = other.timestamp_;
      isAsync_ = other.isAsync_;
      handleId_ = other.handleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvokeOperationClientNotification Clone() {
      return new InvokeOperationClientNotification(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "submodelId" field.</summary>
    public const int SubmodelIdFieldNumber = 2;
    private string submodelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmodelId {
      get { return submodelId_; }
      set {
        submodelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operationIdShort" field.</summary>
    public const int OperationIdShortFieldNumber = 3;
    private string operationIdShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationIdShort {
      get { return operationIdShort_; }
      set {
        operationIdShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inputVariables" field.</summary>
    public const int InputVariablesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO> _repeated_inputVariables_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO> inputVariables_ = new pbc::RepeatedField<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO> InputVariables {
      get { return inputVariables_; }
    }

    /// <summary>Field number for the "inoutVariables" field.</summary>
    public const int InoutVariablesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO> _repeated_inoutVariables_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO> inoutVariables_ = new pbc::RepeatedField<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationVariableDTO> InoutVariables {
      get { return inoutVariables_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "isAsync" field.</summary>
    public const int IsAsyncFieldNumber = 7;
    private bool isAsync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAsync {
      get { return isAsync_; }
      set {
        isAsync_ = value;
      }
    }

    /// <summary>Field number for the "handleId" field.</summary>
    public const int HandleIdFieldNumber = 8;
    private string handleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HandleId {
      get { return handleId_; }
      set {
        handleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvokeOperationClientNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvokeOperationClientNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (SubmodelId != other.SubmodelId) return false;
      if (OperationIdShort != other.OperationIdShort) return false;
      if(!inputVariables_.Equals(other.inputVariables_)) return false;
      if(!inoutVariables_.Equals(other.inoutVariables_)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (IsAsync != other.IsAsync) return false;
      if (HandleId != other.HandleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (SubmodelId.Length != 0) hash ^= SubmodelId.GetHashCode();
      if (OperationIdShort.Length != 0) hash ^= OperationIdShort.GetHashCode();
      hash ^= inputVariables_.GetHashCode();
      hash ^= inoutVariables_.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (IsAsync != false) hash ^= IsAsync.GetHashCode();
      if (HandleId.Length != 0) hash ^= HandleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (SubmodelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubmodelId);
      }
      if (OperationIdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationIdShort);
      }
      inputVariables_.WriteTo(output, _repeated_inputVariables_codec);
      inoutVariables_.WriteTo(output, _repeated_inoutVariables_codec);
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (IsAsync != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsAsync);
      }
      if (HandleId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(HandleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (SubmodelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmodelId);
      }
      if (OperationIdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationIdShort);
      }
      size += inputVariables_.CalculateSize(_repeated_inputVariables_codec);
      size += inoutVariables_.CalculateSize(_repeated_inoutVariables_codec);
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (IsAsync != false) {
        size += 1 + 1;
      }
      if (HandleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HandleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvokeOperationClientNotification other) {
      if (other == null) {
        return;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.SubmodelId.Length != 0) {
        SubmodelId = other.SubmodelId;
      }
      if (other.OperationIdShort.Length != 0) {
        OperationIdShort = other.OperationIdShort;
      }
      inputVariables_.Add(other.inputVariables_);
      inoutVariables_.Add(other.inoutVariables_);
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.IsAsync != false) {
        IsAsync = other.IsAsync;
      }
      if (other.HandleId.Length != 0) {
        HandleId = other.HandleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            SubmodelId = input.ReadString();
            break;
          }
          case 26: {
            OperationIdShort = input.ReadString();
            break;
          }
          case 34: {
            inputVariables_.AddEntriesFrom(input, _repeated_inputVariables_codec);
            break;
          }
          case 42: {
            inoutVariables_.AddEntriesFrom(input, _repeated_inoutVariables_codec);
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 56: {
            IsAsync = input.ReadBool();
            break;
          }
          case 66: {
            HandleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientNotification : pb::IMessage<ClientNotification> {
    private static readonly pb::MessageParser<ClientNotification> _parser = new pb::MessageParser<ClientNotification>(() => new ClientNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientNotification(ClientNotification other) : this() {
      type_ = other.type_;
      connected_ = other.connected_ != null ? other.connected_.Clone() : null;
      aborted_ = other.aborted_ != null ? other.aborted_.Clone() : null;
      invokeOperation_ = other.invokeOperation_ != null ? other.invokeOperation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientNotification Clone() {
      return new ClientNotification(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ClientNotificationType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ClientNotificationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "connected" field.</summary>
    public const int ConnectedFieldNumber = 2;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectedClientNotification connected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectedClientNotification Connected {
      get { return connected_; }
      set {
        connected_ = value;
      }
    }

    /// <summary>Field number for the "aborted" field.</summary>
    public const int AbortedFieldNumber = 3;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortedClientNotification aborted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortedClientNotification Aborted {
      get { return aborted_; }
      set {
        aborted_ = value;
      }
    }

    /// <summary>Field number for the "invokeOperation" field.</summary>
    public const int InvokeOperationFieldNumber = 4;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.InvokeOperationClientNotification invokeOperation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.InvokeOperationClientNotification InvokeOperation {
      get { return invokeOperation_; }
      set {
        invokeOperation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Connected, other.Connected)) return false;
      if (!object.Equals(Aborted, other.Aborted)) return false;
      if (!object.Equals(InvokeOperation, other.InvokeOperation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (connected_ != null) hash ^= Connected.GetHashCode();
      if (aborted_ != null) hash ^= Aborted.GetHashCode();
      if (invokeOperation_ != null) hash ^= InvokeOperation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (connected_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connected);
      }
      if (aborted_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Aborted);
      }
      if (invokeOperation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InvokeOperation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (connected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connected);
      }
      if (aborted_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aborted);
      }
      if (invokeOperation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvokeOperation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientNotification other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.connected_ != null) {
        if (connected_ == null) {
          Connected = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectedClientNotification();
        }
        Connected.MergeFrom(other.Connected);
      }
      if (other.aborted_ != null) {
        if (aborted_ == null) {
          Aborted = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortedClientNotification();
        }
        Aborted.MergeFrom(other.Aborted);
      }
      if (other.invokeOperation_ != null) {
        if (invokeOperation_ == null) {
          InvokeOperation = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.InvokeOperationClientNotification();
        }
        InvokeOperation.MergeFrom(other.InvokeOperation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ClientNotificationType) input.ReadEnum();
            break;
          }
          case 18: {
            if (connected_ == null) {
              Connected = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectedClientNotification();
            }
            input.ReadMessage(Connected);
            break;
          }
          case 26: {
            if (aborted_ == null) {
              Aborted = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortedClientNotification();
            }
            input.ReadMessage(Aborted);
            break;
          }
          case 34: {
            if (invokeOperation_ == null) {
              InvokeOperation = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.InvokeOperationClientNotification();
            }
            input.ReadMessage(InvokeOperation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConnectServerNotification : pb::IMessage<ConnectServerNotification> {
    private static readonly pb::MessageParser<ConnectServerNotification> _parser = new pb::MessageParser<ConnectServerNotification>(() => new ConnectServerNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectServerNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerNotification(ConnectServerNotification other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerNotification Clone() {
      return new ConnectServerNotification(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectServerNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectServerNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectServerNotification other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AbortServerNotification : pb::IMessage<AbortServerNotification> {
    private static readonly pb::MessageParser<AbortServerNotification> _parser = new pb::MessageParser<AbortServerNotification>(() => new AbortServerNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbortServerNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortServerNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortServerNotification(AbortServerNotification other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortServerNotification Clone() {
      return new AbortServerNotification(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbortServerNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbortServerNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbortServerNotification other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationStateServerNotification : pb::IMessage<OperationStateServerNotification> {
    private static readonly pb::MessageParser<OperationStateServerNotification> _parser = new pb::MessageParser<OperationStateServerNotification>(() => new OperationStateServerNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationStateServerNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationStateServerNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationStateServerNotification(OperationStateServerNotification other) : this() {
      handleId_ = other.handleId_;
      executionState_ = other.executionState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationStateServerNotification Clone() {
      return new OperationStateServerNotification(this);
    }

    /// <summary>Field number for the "handleId" field.</summary>
    public const int HandleIdFieldNumber = 1;
    private string handleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HandleId {
      get { return handleId_; }
      set {
        handleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "executionState" field.</summary>
    public const int ExecutionStateFieldNumber = 2;
    private global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.ExecutionState executionState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.ExecutionState ExecutionState {
      get { return executionState_; }
      set {
        executionState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationStateServerNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationStateServerNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HandleId != other.HandleId) return false;
      if (ExecutionState != other.ExecutionState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HandleId.Length != 0) hash ^= HandleId.GetHashCode();
      if (ExecutionState != 0) hash ^= ExecutionState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HandleId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HandleId);
      }
      if (ExecutionState != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ExecutionState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HandleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HandleId);
      }
      if (ExecutionState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExecutionState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationStateServerNotification other) {
      if (other == null) {
        return;
      }
      if (other.HandleId.Length != 0) {
        HandleId = other.HandleId;
      }
      if (other.ExecutionState != 0) {
        ExecutionState = other.ExecutionState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HandleId = input.ReadString();
            break;
          }
          case 16: {
            ExecutionState = (global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.ExecutionState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationResultServerNotification : pb::IMessage<OperationResultServerNotification> {
    private static readonly pb::MessageParser<OperationResultServerNotification> _parser = new pb::MessageParser<OperationResultServerNotification>(() => new OperationResultServerNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationResultServerNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationResultServerNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationResultServerNotification(OperationResultServerNotification other) : this() {
      clientId_ = other.clientId_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationResultServerNotification Clone() {
      return new OperationResultServerNotification(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationResultServerNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationResultServerNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationResultServerNotification other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::FSR.DigitalTwin.App.GRPC.Aas.Lib.V3.OperationResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerNotification : pb::IMessage<ServerNotification> {
    private static readonly pb::MessageParser<ServerNotification> _parser = new pb::MessageParser<ServerNotification>(() => new ServerNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerNotification(ServerNotification other) : this() {
      type_ = other.type_;
      connect_ = other.connect_ != null ? other.connect_.Clone() : null;
      abort_ = other.abort_ != null ? other.abort_.Clone() : null;
      operationState_ = other.operationState_ != null ? other.operationState_.Clone() : null;
      operationResult_ = other.operationResult_ != null ? other.operationResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerNotification Clone() {
      return new ServerNotification(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ServerNotificationType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ServerNotificationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 2;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectServerNotification connect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectServerNotification Connect {
      get { return connect_; }
      set {
        connect_ = value;
      }
    }

    /// <summary>Field number for the "abort" field.</summary>
    public const int AbortFieldNumber = 3;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortServerNotification abort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortServerNotification Abort {
      get { return abort_; }
      set {
        abort_ = value;
      }
    }

    /// <summary>Field number for the "operationState" field.</summary>
    public const int OperationStateFieldNumber = 5;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationStateServerNotification operationState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationStateServerNotification OperationState {
      get { return operationState_; }
      set {
        operationState_ = value;
      }
    }

    /// <summary>Field number for the "operationResult" field.</summary>
    public const int OperationResultFieldNumber = 6;
    private global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationResultServerNotification operationResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationResultServerNotification OperationResult {
      get { return operationResult_; }
      set {
        operationResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Abort, other.Abort)) return false;
      if (!object.Equals(OperationState, other.OperationState)) return false;
      if (!object.Equals(OperationResult, other.OperationResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (connect_ != null) hash ^= Connect.GetHashCode();
      if (abort_ != null) hash ^= Abort.GetHashCode();
      if (operationState_ != null) hash ^= OperationState.GetHashCode();
      if (operationResult_ != null) hash ^= OperationResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (connect_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connect);
      }
      if (abort_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Abort);
      }
      if (operationState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OperationState);
      }
      if (operationResult_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OperationResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (connect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (abort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Abort);
      }
      if (operationState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationState);
      }
      if (operationResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerNotification other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.connect_ != null) {
        if (connect_ == null) {
          Connect = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectServerNotification();
        }
        Connect.MergeFrom(other.Connect);
      }
      if (other.abort_ != null) {
        if (abort_ == null) {
          Abort = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortServerNotification();
        }
        Abort.MergeFrom(other.Abort);
      }
      if (other.operationState_ != null) {
        if (operationState_ == null) {
          OperationState = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationStateServerNotification();
        }
        OperationState.MergeFrom(other.OperationState);
      }
      if (other.operationResult_ != null) {
        if (operationResult_ == null) {
          OperationResult = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationResultServerNotification();
        }
        OperationResult.MergeFrom(other.OperationResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ServerNotificationType) input.ReadEnum();
            break;
          }
          case 18: {
            if (connect_ == null) {
              Connect = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.ConnectServerNotification();
            }
            input.ReadMessage(Connect);
            break;
          }
          case 26: {
            if (abort_ == null) {
              Abort = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.AbortServerNotification();
            }
            input.ReadMessage(Abort);
            break;
          }
          case 42: {
            if (operationState_ == null) {
              OperationState = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationStateServerNotification();
            }
            input.ReadMessage(OperationState);
            break;
          }
          case 50: {
            if (operationResult_ == null) {
              OperationResult = new global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.OperationResultServerNotification();
            }
            input.ReadMessage(OperationResult);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestMessage : pb::IMessage<TestMessage> {
    private static readonly pb::MessageParser<TestMessage> _parser = new pb::MessageParser<TestMessage>(() => new TestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.DigitalTwin.App.GRPC.Services.DigitalTwinClientConnectionService.DigitalTwinClientConnectionServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestMessage(TestMessage other) : this() {
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestMessage Clone() {
      return new TestMessage(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Info.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestMessage other) {
      if (other == null) {
        return;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
